package isi.util.logging;

public class HandlerResources {
	
	public static String GetScript () {
		return ""
				+ "function _ (name)\n"
				+ "	{ return document.getElementsByClassName(name); }\n"
				+ "\n"
				+ "function $ (id)\n"
				+ "	{ return document.getElementById(id); }\n"
				+ "	\n"
				+ "function getClass (elem)\n"
				+ "	{ return elem.getAttribute(\"class\"); }\n"
				+ "function setClass (elem, klass)\n"
				+ "	{ elem.setAttribute(\"class\", klass); }\n"
				+ "\n"
				+ "function MakeSwitchPanelId (level)\n"
				+ "	{ return level + \"_switch\"; }\n"
				+ "\n"
				+ "G = {};\n"
				+ "\n"
				+ "function GetSwitchPanel (level)\n"
				+ "	{ return G[MakeSwitchPanelId(level)]; }\n"
				+ "\n"
				+ "function GetSwitchDisplayFromPanel (switchPanel)\n"
				+ "	{ return switchPanel.getElementsByClassName(\"switch\")[0].getElementsByTagName(\"span\")[0]; }\n"
				+ "function GetSwitchDisplay (level)\n"
				+ "	{ return GetSwitchDisplayFromPanel(GetSwitchPanel(level)); }\n"
				+ "\n"
				+ "function SwitchPanelTo (level, toClass, toText) {\n"
				+ "	display = GetSwitchDisplay(level);\n"
				+ "	setClass(display, toClass);\n"
				+ "	display.innerHTML = toText;\n"
				+ "}\n"
				+ "function SwitchPanelOn (level) \n"
				+ "	{ SwitchPanelTo(level, G.ON_CLASS, G.ON_TEXT); }\n"
				+ "function SwitchPanelOff (level)\n"
				+ "	{ SwitchPanelTo(level, G.OFF_CLASS, G.OFF_TEXT); }\n"
				+ "	\n"
				+ "function IsPanelInState (level, state)\n"
				+ "	{ return getClass(GetSwitchDisplay(level)) == state; }\n"
				+ "function IsPanelOn (level)\n"
				+ "	{ return IsPanelInState(level, G.ON_CLASS); }\n"
				+ "function IsPanelOff (level)\n"
				+ "	{ return IsPanelInState(level, G.OFF_CLASS); }\n"
				+ "\n"
				+ "function InvalidatePanel (level) {\n"
				+ "	display = GetSwitchDisplay(level);\n"
				+ "	display.textContent = \"INV\";\n"
				+ "	setClass(display, \"invalidated\");\n"
				+ "}\n"
				+ "\n"
				+ "function SetCssDisplayForRecords (rlevel, cssDisplay) {\n"
				+ "	records = _(\"record\");\n"
				+ "	for (i = 0; i < records.length; ++i) {\n"
				+ "		r = records.item(i);\n"
				+ "		if (getClass(r).split(\" \")[1] == rlevel)\n"
				+ "			r.style.display = cssDisplay;\n"
				+ "	}\n"
				+ "}\n"
				+ "function HideRecords (rlevel)\n"
				+ "	{ SetCssDisplayForRecords(rlevel, \"none\"); }\n"
				+ "function ShowRecords (rlevel)\n"
				+ "	{ SetCssDisplayForRecords(rlevel, \"block\"); }\n"
				+ "\n"
				+ "function MakeSwitcher (level) {\n"
				+ "	return function (event) {\n"
				+ "		if (IsPanelOn(level)) {\n"
				+ "			SwitchPanelOff(level);\n"
				+ "			HideRecords(G.RecordLevel[level]);\n"
				+ "		}\n"
				+ "		else if (IsPanelOff(level)) {\n"
				+ "			SwitchPanelOn(level);\n"
				+ "			ShowRecords(G.RecordLevel[level]);\n"
				+ "		}\n"
				+ "		else\n"
				+ "			InvalidatePanel(level);\n"
				+ "	};\n"
				+ "}\n"
				+ "\n";
	}
	
	public static String GetStylesheet () {
		return ""
				+ "body {\n"
				+ "	background-color: #202020;\n"
				+ "	font-size: 12px;\n"
				+ "	font-family: \"verdana\", sans-serif;\n"
				+ "	margin: 0;\n"
				+ "	padding: 0;\n"
				+ "}\n"
				+ "\n"
				+ "#controls {\n"
				+ "	color: #505050;\n"
				+ "	position: fixed;\n"
				+ "	top: .3em;\n"
				+ "	margin: 0;\n"
				+ "	padding: .2em;\n"
				+ "	width: 13%;\n"
				+ "	border-style: double;\n"
				+ "	border-width: .2em .3em .1em 0;\n"
				+ "	border-color: #505050;\n"
				+ "}\n"
				+ "#controls .switch {\n"
				+ "	font-family: monospace;\n"
				+ "}\n"
				+ "#controls .switch > .on {\n"
				+ "	color: #a0f080;\n"
				+ "}\n"
				+ "#controls .switch > .off {\n"
				+ "	color: #f0a080;\n"
				+ "}\n"
				+ "\n"
				+ "/******************* RECORDS *******************/\n"
				+ "\n"
				+ ".record {\n"
				+ "	position: relative;\n"
				+ "	border-width: .2em;\n"
				+ "	border-style: solid;\n"
				+ "	padding: .3em;\n"
				+ "	width: 70%;\n"
				+ "	margin: 3em auto;\n"
				+ "}\n"
				+ "\n"
				+ ".record .date, .record .logger {\n"
				+ "	font-size: .8em;\n"
				+ "}\n"
				+ "\n"
				+ ".record .message {\n"
				+ "	margin-top: .4em;\n"
				+ "	white-space: pre;\n"
				+ "	font-family: \"consolas\", \"courier new\", monospace;\n"
				+ "}\n"
				+ "\n"
				+ "\n"
				+ "/******************* COLOURS *******************/\n"
				+ "\n"
				+ ".FINEST {\n"
				+ "	border-color: #1e1e1e;\n"
				+ "	background-color: #222222;\n"
				+ "	color: #505050;\n"
				+ "}\n"
				+ "\n"
				+ ".INFO {\n"
				+ "	border-color: #404060;\n"
				+ "	background-color: #101018;\n"
				+ "	color: #80a0f0;\n"
				+ "}\n"
				+ ".INFO .message {\n"
				+ "	color: #6070b0;\n"
				+ "}\n"
				+ "\n"
				+ ".WARNING {\n"
				+ "	border-color: #605440;\n"
				+ "	background-color: #181810;\n"
				+ "	color: #f0e0b0;\n"
				+ "}\n"
				+ ".WARNING .message {\n"
				+ "	color: #b0a070;\n"
				+ "}\n";
	}

	private HandlerResources () {
	}
}
